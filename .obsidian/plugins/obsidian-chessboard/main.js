/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var Arrow = /** @class */ (function () {
    function Arrow() {
    }
    Arrow.drawArrow = function (x0, y0, x1, y1, color) {
        var arrow = document.createElementNS(this.xmlns, "polygon");
        var width2 = 5;
        var headWidth = 20;
        var arrowWidth = 10;
        var length = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));
        // The idea here is create an horizontal right-pointing arrow and then rotate it
        // so that it points to (x1,y2).
        var ax = x0;
        var ay = y0 - width2;
        var bx = x0 + length - headWidth;
        var by = ay;
        var cx = bx;
        var cy = y0 - arrowWidth;
        var dx = x0 + length;
        var dy = y0;
        var ex = bx;
        var ey = y0 + arrowWidth;
        var fx = bx;
        var fy = y0 + width2;
        var gx = x0;
        var gy = fy;
        arrow.setAttributeNS(null, "points", "".concat(ax, ",").concat(ay, " ").concat(bx, ",").concat(by, " ").concat(cx, ",").concat(cy, " ").concat(dx, ",").concat(dy, " ").concat(ex, ",").concat(ey, " ").concat(fx, ",").concat(fy, " ").concat(gx, ",").concat(gy));
        arrow.setAttributeNS(null, "transform", "rotate(".concat(Math.atan2(y1 - y0, x1 - x0) * (180 / Math.PI), ",").concat(x0, ",").concat(y0, ")"));
        arrow.setAttributeNS(null, "fill", color);
        return arrow;
    };
    Arrow.xmlns = "http://www.w3.org/2000/svg";
    return Arrow;
}());

var Chessboard = /** @class */ (function () {
    function Chessboard() {
        this.BOARD_SIZE = 8;
        this.chessboard = new Array(this.BOARD_SIZE * this.BOARD_SIZE).fill("_");
    }
    Chessboard.prototype.set = function (c, r, value) {
        this.chessboard[r * this.BOARD_SIZE + c] = value;
    };
    Chessboard.prototype.get = function (c, r) {
        return this.chessboard[r * this.BOARD_SIZE + c];
    };
    Chessboard.prototype.setAlgebraic = function (algebraic, value) {
        var _a = this.algebraicToCoord(algebraic), c = _a[0], r = _a[1];
        this.set(c, r, value);
    };
    Chessboard.prototype.getAlgebraic = function (algebraic) {
        var _a = this.algebraicToCoord(algebraic), c = _a[0], r = _a[1];
        return this.get(c, r);
    };
    Chessboard.prototype.algebraicToCoord = function (algebraic) {
        if (this.BOARD_SIZE !== 8) {
            throw Error("Algebraic notation currently supported only for 8x8 chessboards.");
        }
        algebraic = algebraic.toLowerCase();
        if (algebraic.length !== 2) {
            throw Error("Input does not look algebraic notation.");
        }
        var columnMap = {
            a: 0,
            b: 1,
            c: 2,
            d: 3,
            e: 4,
            f: 5,
            g: 6,
            h: 7,
            i: 8,
        };
        var columnA = algebraic[0];
        var rowA = algebraic[1];
        return [columnMap[columnA], 8 - parseInt(rowA)];
    };
    Chessboard.prototype.print = function () {
        var _this = this;
        var chessString = "";
        this.chessboard.forEach(function (p, i) {
            if (p === "_") {
                chessString += ".";
            }
            else {
                chessString += p;
            }
            if ((i + 1) % _this.BOARD_SIZE === 0) {
                chessString += "\n";
            }
        });
        console.log(chessString);
    };
    Chessboard.fromFEN = function (fenString) {
        try {
            var _a = fenString.split(" "), board = _a[0], activePlayer = _a[1], castling = _a[2], enPassant = _a[3], halfMoveClock = _a[4], fullMoveClock = _a[5];
            var chessboard = new Chessboard();
            var r = 0;
            for (var _i = 0, _b = board.split("/"); _i < _b.length; _i++) {
                var row = _b[_i];
                var parsed = Chessboard.parseFENBoardLine(row);
                for (var c = 0; c < chessboard.BOARD_SIZE; c++) {
                    chessboard.set(c, r, parsed[c]);
                }
                r += 1;
            }
            return chessboard;
        }
        catch (_c) {
            throw Error("Invalid FEN String.");
        }
    };
    Chessboard.parseFENBoardLine = function (line) {
        var i = 0;
        var j = 0;
        var result = new Array(8).fill("_");
        while (i < line.length) {
            var token = line[i];
            var numToken = parseInt(token, 10);
            if (!isNaN(numToken)) {
                j += numToken;
                i++;
                continue;
            }
            result[j] = token;
            i++;
            j++;
        }
        return result;
    };
    return Chessboard;
}());

/**
 * In this file there are th SVG images for the board pieces. This is a trick to avoid the complications
 * of having to bundle SVG files into the library.
 *
 * The strings comes from assets/Chess_Piece_Sprite.svg file (that I saved there as a reference)
 */
var WHITE_KING = "\n<g style=\"fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n        <path\n        d=\"M 22.5,11.63 L 22.5,6\"\n        style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n        <path\n        d=\"M 20,8 L 25,8\"\n        style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n        <path\n        d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\n        style=\"fill:#ffffff; stroke:#000000; stroke-linecap:butt; stroke-linejoin:miter;\" />\n        <path\n        d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\n        style=\"fill:#ffffff; stroke:#000000;\" />\n        <path\n        d=\"M 11.5,30 C 17,27 27,27 32.5,30\"\n        style=\"fill:none; stroke:#000000;\" />\n        <path\n        d=\"M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5\"\n        style=\"fill:none; stroke:#000000;\" />\n        <path\n        d=\"M 11.5,37 C 17,34 27,34 32.5,37\"\n        style=\"fill:none; stroke:#000000;\" />\n    </g>";
var WHITE_QUEEN = "<g style=\"opacity:1; fill:#ffffff; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n    <path\n    d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n    transform=\"translate(-1,-1)\" />\n    <path\n    d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n    transform=\"translate(15.5,-5.5)\" />\n    <path\n    d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n    transform=\"translate(32,-1)\" />\n    <path\n    d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n    transform=\"translate(7,-4.5)\" />\n    <path\n    d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n    transform=\"translate(24,-4)\" />\n    <path\n    d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z \"\n    style=\"stroke-linecap:butt;\" />\n    <path\n    d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z \"\n    style=\"stroke-linecap:butt;\" />\n    <path\n    d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\n    style=\"fill:none;\" />\n    <path\n    d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\n    style=\"fill:none;\" />\n</g>";
var WHITE_BISHOP = "<g style=\"opacity:1; fill:none; fill-rule:evenodd; fill-opacity:1; stroke:#000000; stroke-width:1.5; stroke-linecap:round; stroke-linejoin:round; stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<g style=\"fill:#ffffff; stroke:#000000; stroke-linecap:butt;\"> \n    <path\n    d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\n    <path\n    d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\n    <path\n    d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\n</g>\n<path\nd=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\nstyle=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n</g>";
var WHITE_KNIGHT = "<g style=\"opacity:1; fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<path\nd=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\nstyle=\"fill:#ffffff; stroke:#000000;\" />\n<path\nd=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\nstyle=\"fill:#ffffff; stroke:#000000;\" />\n<path\nd=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\nstyle=\"fill:#000000; stroke:#000000;\" />\n<path\nd=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\ntransform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\nstyle=\"fill:#000000; stroke:#000000;\" />\n</g>";
var WHITE_ROOK = "<g style=\"opacity:1; fill:#ffffff; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<path\nd=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14\"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 34,14 L 31,17 L 14,17 L 11,14\" />\n<path\nd=\"M 31,17 L 31,29.5 L 14,29.5 L 14,17\"\nstyle=\"stroke-linecap:butt; stroke-linejoin:miter;\" />\n<path\nd=\"M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5\" />\n<path\nd=\"M 11,14 L 34,14\"\nstyle=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n</g>";
var WHITE_PAWN = "<g>\n<path\nd=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\nstyle=\"opacity:1; fill:#ffffff; fill-opacity:1; fill-rule:nonzero; stroke:#000000; stroke-width:1.5; stroke-linecap:round; stroke-linejoin:miter; stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\" />\n</g>";
var BLACK_KING = "<g style=\"fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<path \n    d=\"M 22.5,11.63 L 22.5,6\"\n    style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n<path\n    d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\" \n    style=\"fill:#000000;fill-opacity:1; stroke-linecap:butt; stroke-linejoin:miter;\" />\n<path\n   d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\n   style=\"fill:#000000; stroke:#000000;\" />\n<path\n   d=\"M 20,8 L 25,8\"\n   style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n<path\n   d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85\"\n   style=\"fill:none; stroke:#ffffff;\" />\n<path\n   d=\"M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37\"\n   style=\"fill:none; stroke:#ffffff;\" />\n</g>";
var BLACK_QUEEN = "<g style=\"opacity:1; fill:000000; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<g style=\"fill:#000000; stroke:none;\">\n    <circle cx=\"6\"    cy=\"12\" r=\"2.75\" />\n    <circle cx=\"14\"   cy=\"9\"  r=\"2.75\" />\n    <circle cx=\"22.5\" cy=\"8\"  r=\"2.75\" />\n    <circle cx=\"31\"   cy=\"9\"  r=\"2.75\" />\n    <circle cx=\"39\"   cy=\"12\" r=\"2.75\" />\n</g>\n<path\nd=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\nstyle=\"stroke-linecap:butt; stroke:#000000;\" />\n<path\nd=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\nstyle=\"fill:none; stroke:#000000; stroke-linecap:butt;\" />\n<path\nd=\"M 11,29 A 35,35 1 0 1 34,29\"\nstyle=\"fill:none; stroke:#ffffff;\" />\n<path\nd=\"M 12.5,31.5 L 32.5,31.5\"\nstyle=\"fill:none; stroke:#ffffff;\" />\n<path\nd=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\nstyle=\"fill:none; stroke:#ffffff;\" />\n<path\nd=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\nstyle=\"fill:none; stroke:#ffffff;\" />\n</g>";
var BLACK_BISHOP = "<g style=\"opacity:1; fill:none; fill-rule:evenodd; fill-opacity:1; stroke:#000000; stroke-width:1.5; stroke-linecap:round; stroke-linejoin:round; stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<g style=\"fill:#000000; stroke:#000000; stroke-linecap:butt;\"> \n    <path\n        d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\n    <path\n        d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\n    <path\n        d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\n</g>\n<path\n   d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\n   style=\"fill:none; stroke:#ffffff; stroke-linejoin:miter;\" />\n</g>";
var BLACK_KNIGHT = "<g style=\"opacity:1; fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<path\n   d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n   style=\"fill:#000000; stroke:#000000;\" />\n<path\n   d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\n   style=\"fill:#000000; stroke:#000000;\" />\n<path\n   d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n   style=\"fill:#ffffff; stroke:#ffffff;\" />\n<path\n   d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n   transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n   style=\"fill:#ffffff; stroke:#ffffff;\" />\n<path\n   d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\n   style=\"fill:#ffffff; stroke:none;\" />\n</g>";
var BLACK_ROOK = "<g style=\"opacity:1; fill:000000; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\"\">\n<path\nd=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\nstyle=\"stroke-linecap:butt;stroke-linejoin:miter;\" />\n<path\nd=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\nstyle=\"stroke-linecap:butt;\" />\n<path\nd=\"M 12,35.5 L 33,35.5 L 33,35.5\"\nstyle=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n<path\nd=\"M 13,31.5 L 32,31.5\"\nstyle=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n<path\nd=\"M 14,29.5 L 31,29.5\"\nstyle=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n<path\nd=\"M 14,16.5 L 31,16.5\"\nstyle=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n<path\nd=\"M 11,14 L 34,14\"\nstyle=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n</g>";
var BLACK_PAWN = "<g>\n<path\nd=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\nstyle=\"opacity:1; fill:#000000; fill-opacity:1; fill-rule:nonzero; stroke:#000000; stroke-width:1.5; stroke-linecap:round; stroke-linejoin:miter; stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\" />\n</g>";

var SVGChessboard = /** @class */ (function () {
    function SVGChessboard(chessboard, _a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.drawCoordinates, drawCoordinates = _c === void 0 ? true : _c, _d = _b.orientation, orientation = _d === void 0 ? "white" : _d, _e = _b.whiteSquareColor, whiteSquareColor = _e === void 0 ? "#f0d9b5" : _e, _f = _b.blackSquareColor, blackSquareColor = _f === void 0 ? "#b58862" : _f, _g = _b.defaultHighlightColor, defaultHighlightColor = _g === void 0 ? "#b0ffb0" : _g, _h = _b.defaultArrowColor, defaultArrowColor = _h === void 0 ? "#ff6060" : _h;
        this.xmlns = "http://www.w3.org/2000/svg";
        this.baseSquareSize = 40;
        this.whiteColor = "#f0d9b5";
        this.blackColor = "#b58862";
        this.defaultHighlightColor = "#b0ffb0";
        this.defaultArrowColor = "#ff6060";
        this.highlights = [];
        this.annotations = [];
        this.chessboard = chessboard;
        this.squareSize = this.baseSquareSize;
        this.squareSizeHalf = this.squareSize / 2;
        this.whiteColor = whiteSquareColor;
        this.blackColor = blackSquareColor;
        this.defaultHighlightColor = defaultHighlightColor;
        this.defaultArrowColor = defaultArrowColor;
        this.options = {
            orientation: orientation,
            drawCoordinates: drawCoordinates,
            whiteSquareColor: whiteSquareColor,
            blackSquareColor: blackSquareColor,
            defaultHighlightColor: defaultHighlightColor,
            defaultArrowColor: defaultArrowColor,
        };
    }
    SVGChessboard.prototype.draw = function () {
        var g = document.createElementNS(this.xmlns, "g");
        g.appendChild(this.drawBoard());
        if (this.options.drawCoordinates) {
            g.appendChild(this.drawCoordinateSystem());
        }
        g.appendChild(this.drawAnnotations());
        g.appendChild(this.drawPieces());
        return g;
    };
    SVGChessboard.prototype.highlight = function (cell, color) {
        if (color === void 0) { color = this.defaultHighlightColor; }
        var _a = this.chessboard.algebraicToCoord(cell), c = _a[0], r = _a[1];
        this.highlightCoord(c, r, color);
    };
    SVGChessboard.prototype.addArrow = function (startCell, endCell, color) {
        if (color === void 0) { color = this.defaultArrowColor; }
        this.annotations.push({
            type: "arrow",
            start: startCell,
            end: endCell,
            color: color,
        });
    };
    SVGChessboard.prototype.highlightCoord = function (c, r, color) {
        if (color === void 0) { color = this.defaultHighlightColor; }
        this.highlights.push([[c, r], color]);
    };
    SVGChessboard.prototype.removeHighlight = function (cell) {
        this.removeHighlightCoord.apply(this, this.chessboard.algebraicToCoord(cell));
    };
    SVGChessboard.prototype.removeHighlightCoord = function (c, r) {
        this.highlights = this.highlights.filter(function (_a) {
            var coord = _a[0]; _a[1];
            return coord[0] !== c || coord[1] !== r;
        });
    };
    SVGChessboard.prototype.setOrientation = function (orientation) {
        this.options.orientation = orientation;
    };
    SVGChessboard.prototype.drawAnnotations = function () {
        var g = document.createElementNS(this.xmlns, "g");
        for (var _i = 0, _a = this.highlights; _i < _a.length; _i++) {
            var _b = _a[_i], coord = _b[0], highlightColor = _b[1];
            var square = this.drawSquare(coord);
            square.setAttributeNS(null, "fill", highlightColor);
            square.style.opacity = "0.8";
            g.appendChild(square);
        }
        for (var _c = 0, _d = this.annotations; _c < _d.length; _c++) {
            var annotation = _d[_c];
            if (annotation.type === "arrow") {
                var start = annotation.start;
                var end = annotation.end;
                var _e = this.getBoardSVGCord(this.chessboard.algebraicToCoord(start)), x0 = _e[0], y0 = _e[1];
                var _f = this.getBoardSVGCord(this.chessboard.algebraicToCoord(end)), x1 = _f[0], y1 = _f[1];
                g.appendChild(Arrow.drawArrow(x0 + this.squareSizeHalf, y0 + this.squareSizeHalf, x1 + this.squareSizeHalf, y1 + this.squareSizeHalf, annotation.color));
            }
        }
        return g;
    };
    SVGChessboard.prototype.getHighlightedColor = function (c, r) {
        var highlightItem = this.highlights.find(function (hi) {
            var _a = hi[0], x = _a[0], y = _a[1];
            return x === c && y === r;
        });
        return highlightItem === null || highlightItem === void 0 ? void 0 : highlightItem[1];
    };
    SVGChessboard.prototype.drawBoard = function () {
        var g = document.createElementNS(this.xmlns, "g");
        for (var r = 0; r < 8; r++) {
            for (var c = 0; c < 8; c++) {
                g.appendChild(this.drawSquare([c, r]));
            }
        }
        return g;
    };
    SVGChessboard.prototype.drawPieces = function () {
        var g = document.createElementNS(this.xmlns, "g");
        for (var r = 0; r < 8; r++) {
            for (var c = 0; c < 8; c++) {
                var piece = this.chessboard.get(c, r);
                if (piece === "K") {
                    g.appendChild(this.drawPiece([c, r], WHITE_KING));
                }
                if (piece === "Q") {
                    g.appendChild(this.drawPiece([c, r], WHITE_QUEEN));
                }
                if (piece === "N") {
                    g.appendChild(this.drawPiece([c, r], WHITE_KNIGHT));
                }
                if (piece === "R") {
                    g.appendChild(this.drawPiece([c, r], WHITE_ROOK));
                }
                if (piece === "B") {
                    g.appendChild(this.drawPiece([c, r], WHITE_BISHOP));
                }
                if (piece === "P") {
                    g.appendChild(this.drawPiece([c, r], WHITE_PAWN));
                }
                if (piece === "k") {
                    g.appendChild(this.drawPiece([c, r], BLACK_KING));
                }
                if (piece === "q") {
                    g.appendChild(this.drawPiece([c, r], BLACK_QUEEN));
                }
                if (piece === "n") {
                    g.appendChild(this.drawPiece([c, r], BLACK_KNIGHT));
                }
                if (piece === "r") {
                    g.appendChild(this.drawPiece([c, r], BLACK_ROOK));
                }
                if (piece === "b") {
                    g.appendChild(this.drawPiece([c, r], BLACK_BISHOP));
                }
                if (piece === "p") {
                    g.appendChild(this.drawPiece([c, r], BLACK_PAWN));
                }
            }
        }
        return g;
    };
    SVGChessboard.prototype.drawPiece = function (coord, piece) {
        var _a = this.getBoardSVGCord(coord), x = _a[0], y = _a[1];
        //const DELTA = 0 * this.scale;
        var g = document.createElementNS(this.xmlns, "g");
        g.setAttributeNS(null, "transform", "translate(".concat(x, ",").concat(y, ") scale(").concat(0.85, ")"));
        g.innerHTML = piece;
        return g;
    };
    SVGChessboard.prototype.drawSquare = function (coord) {
        var _a = this.getBoardSVGCord(coord), x = _a[0], y = _a[1];
        var rect = document.createElementNS(this.xmlns, "rect");
        rect.setAttributeNS(null, "x", String(x));
        rect.setAttributeNS(null, "y", String(y));
        rect.setAttributeNS(null, "width", String(this.squareSize));
        rect.setAttributeNS(null, "height", String(this.squareSize));
        rect.setAttributeNS(null, "fill", (coord[1] + coord[0]) % 2 === 0 ? this.whiteColor : this.blackColor);
        return rect;
    };
    SVGChessboard.prototype.drawCoordinateSystem = function () {
        var g = document.createElementNS(this.xmlns, "g");
        for (var r = 0; r < 8; r++) {
            for (var c = 0; c < 8; c++) {
                if ((c === 0 && this.options.orientation === "white") ||
                    (c === 7 && this.options.orientation === "black")) {
                    g.appendChild(this.drawText([c, r], String(8 - r), "row"));
                }
                if ((r === 7 && this.options.orientation === "white") ||
                    (r === 0 && this.options.orientation === "black")) {
                    g.appendChild(this.drawText([c, r], String(this.numToLetter(c)), "column"));
                }
            }
        }
        return g;
    };
    SVGChessboard.prototype.drawText = function (_a, text, position) {
        var c = _a[0], r = _a[1];
        var _b = this.getBoardSVGCord([c, r]), x = _b[0], y = _b[1];
        var txt = document.createElementNS(this.xmlns, "text");
        if (position === "row") {
            txt.setAttributeNS(null, "x", String(x + 1));
            txt.setAttributeNS(null, "y", String(y + 10));
        }
        else {
            txt.setAttributeNS(null, "x", String(x + this.squareSize - 7));
            txt.setAttributeNS(null, "y", String(y + this.squareSize - 2));
        }
        txt.setAttributeNS(null, "font-family", "sans-serif");
        txt.setAttributeNS(null, "font-size", String(10));
        txt.setAttributeNS(null, "fill", (r + c) % 2 === 0 ? this.blackColor : this.whiteColor);
        txt.textContent = text;
        return txt;
    };
    SVGChessboard.prototype.numToLetter = function (num) {
        return String.fromCharCode(97 + num);
    };
    SVGChessboard.prototype.getBoardSVGCord = function (_a) {
        var c = _a[0], r = _a[1];
        if (this.options.orientation == "white") {
            return [c * this.squareSize, r * this.squareSize];
        }
        return [(7 - c) * this.squareSize, (7 - r) * this.squareSize];
    };
    SVGChessboard.fromFEN = function (fenString, options) {
        if (options === void 0) { options = {}; }
        return new SVGChessboard(Chessboard.fromFEN(fenString), options);
    };
    return SVGChessboard;
}());

var ObsidianChess = /** @class */ (function (_super) {
    __extends(ObsidianChess, _super);
    function ObsidianChess() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ObsidianChess.prototype.onInit = function () { };
    ObsidianChess.prototype.onload = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.loadData()];
                    case 1:
                        _a.setting = (_b.sent()) || {
                            whiteSquareColor: "#f0d9b5",
                            blackSquareColor: "#b58862",
                        };
                        this.addSettingTab(new ObsidianChessSettingsTab(this.app, this));
                        this.registerMarkdownCodeBlockProcessor("chessboard", this.draw_chessboard());
                        return [2 /*return*/];
                }
            });
        });
    };
    ObsidianChess.prototype.refreshMarkdownCodeBlockProcessor = function () {
        this.registerMarkdownCodeBlockProcessor("chessboard", this.draw_chessboard());
    };
    ObsidianChess.prototype.draw_chessboard = function () {
        var _this = this;
        return function (source, el, ctx) {
            var parsedCode = ObsidianChess.parseCode(source);
            _this.setting.orientation = parsedCode.orientation;
            var chessboard = SVGChessboard.fromFEN(parsedCode.fen, _this.setting);
            for (var _i = 0, _a = parsedCode.annotations; _i < _a.length; _i++) {
                var annotation = _a[_i];
                if (annotation.type === "arrow") {
                    chessboard.addArrow(annotation.start, annotation.end);
                }
                if (annotation.type === "highlight") {
                    chessboard.highlight(annotation.square);
                }
            }
            var xmlns = "http://www.w3.org/2000/svg";
            var boxWidth = 320;
            var boxHeight = 320;
            var block = document.createElementNS(xmlns, "svg");
            block.setAttributeNS(null, "viewBox", "0 0 ".concat(boxWidth, " ").concat(boxHeight));
            block.setAttributeNS(null, "width", String(boxWidth));
            block.setAttributeNS(null, "height", String(boxHeight));
            block.appendChild(chessboard.draw());
            block.style.display = "block";
            el.appendChild(block);
        };
    };
    ObsidianChess.parseCode = function (input) {
        var lines = input.split(/\r?\n/);
        var fen = lines[0];
        if (fen.startsWith("fen: ")) {
            fen = fen.replace("fen: ", "");
        }
        var annotations = [];
        var orientation = "white";
        for (var _i = 0, _a = lines.splice(1); _i < _a.length; _i++) {
            var line = _a[_i];
            if (line.trim() === "") {
                continue;
            }
            if (line.startsWith("orientation: ")) {
                line = line.replace("orientation: ", "");
                line = line.trim();
                if (line !== "white" && line !== "black") {
                    throw Error("Unknown orientation ".concat(orientation));
                }
                orientation = line;
            }
            if (line.startsWith("annotations: ")) {
                line = line.replace("annotations: ", "");
                var partial_annotations = line.split(" ");
                for (var _b = 0, partial_annotations_1 = partial_annotations; _b < partial_annotations_1.length; _b++) {
                    var annotation = partial_annotations_1[_b];
                    if (annotation.startsWith("H")) {
                        annotations.push({
                            type: "highlight",
                            square: annotation.substring(1),
                        });
                        continue;
                    }
                    if (annotation.startsWith("A")) {
                        var _c = annotation.substring(1).split("-"), start = _c[0], end = _c[1];
                        annotations.push({
                            type: "arrow",
                            start: start,
                            end: end,
                        });
                        continue;
                    }
                }
            }
        }
        return { fen: fen, annotations: annotations, orientation: orientation };
    };
    return ObsidianChess;
}(obsidian.Plugin));
var ObsidianChessSettingsTab = /** @class */ (function (_super) {
    __extends(ObsidianChessSettingsTab, _super);
    function ObsidianChessSettingsTab(app, plugin) {
        var _this = _super.call(this, app, plugin) || this;
        _this.plugin = plugin;
        return _this;
    }
    ObsidianChessSettingsTab.prototype.display = function () {
        var _this = this;
        var containerEl = this.containerEl;
        var settings = this.plugin.setting;
        containerEl.empty();
        containerEl.createEl("h2", { text: "Obsidian Chessboard Settings" });
        new obsidian.Setting(containerEl)
            .setName("White Square Color")
            .setDesc('Set the color of the "white" squares.')
            .addText(function (text) {
            return text.setValue(String(settings.whiteSquareColor)).onChange(function (value) {
                settings.whiteSquareColor = value;
                _this.plugin.refreshMarkdownCodeBlockProcessor();
                _this.plugin.saveData(settings);
            });
        });
        new obsidian.Setting(containerEl)
            .setName("Black Square Color")
            .setDesc('Set the color of the "black" squares.')
            .addText(function (text) {
            return text.setValue(String(settings.blackSquareColor)).onChange(function (value) {
                settings.blackSquareColor = value;
                _this.plugin.refreshMarkdownCodeBlockProcessor();
                _this.plugin.saveData(settings);
            });
        });
    };
    return ObsidianChessSettingsTab;
}(obsidian.PluginSettingTab));

module.exports = ObsidianChess;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
